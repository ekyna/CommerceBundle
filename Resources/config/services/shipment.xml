<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <!-- Shipment rule repository -->
        <service id="ekyna_commerce.shipment_rule.repository"
                 class="Ekyna\Component\Commerce\Bridge\Doctrine\ORM\Repository\ShipmentRuleRepository">
            <factory service="doctrine.orm.entity_manager" method="getRepository"/>
            <argument>%ekyna_commerce.shipment_rule.class%</argument>
            <call method="setContextProvider">
                <argument type="service" id="ekyna_commerce.common.context_provider"/>
            </call>
            <call method="setAmountCalculator">
                <argument type="service" id="ekyna_commerce.common.amount_calculator"/>
            </call>
        </service>

        <!-- Shipment address transformer -->
        <service id="ekyna_commerce.shipment_address.transformer"
                 class="Ekyna\Component\Commerce\Bridge\Symfony\Transformer\ShipmentAddressTransformer">
            <argument type="service" id="ekyna_commerce.country.repository"/>
        </service>

        <!-- Shipment number generator -->
        <service id="ekyna_commerce.shipment.number_generator"
                 class="Ekyna\Component\Commerce\Common\Generator\DateNumberGenerator">
            <argument>%kernel.data_dir%/shipment_number</argument>
            <argument>ym</argument>
            <argument>10</argument>
            <argument>%kernel.debug%</argument>
        </service>

        <!-- Shipment calculator -->
        <service id="ekyna_commerce.shipment.calculator"
                 class="Ekyna\Component\Commerce\Shipment\Calculator\ShipmentCalculator"
                 lazy="true">
            <argument type="service" id="ekyna_commerce.subject_helper"/>
            <call method="setInvoiceCalculator">
                <argument type="service" id="ekyna_commerce.invoice.calculator"/>
            </call>
        </service>

        <!-- Shipment weight calculator -->
        <service id="ekyna_commerce.shipment.weight_calculator"
                 class="Ekyna\Component\Commerce\Shipment\Calculator\WeightCalculator"/>

        <!-- Shipment abstract listener -->
        <service id="ekyna_commerce.shipment.abstract_listener"
                 class="Ekyna\Component\Commerce\Shipment\EventListener\AbstractShipmentListener"
                 abstract="true">
            <call method="setPersistenceHelper">
                <argument type="service" id="ekyna_resource.doctrine.orm.persistence_helper"/>
            </call>
            <call method="setNumberGenerator">
                <argument type="service" id="ekyna_commerce.shipment.number_generator"/>
            </call>
            <call method="setWeightCalculator">
                <argument type="service" id="ekyna_commerce.shipment.weight_calculator"/>
            </call>
            <call method="setStockUnitAssigner">
                <argument type="service" id="ekyna_commerce.stock_unit.assigner"/>
            </call>
            <call method="setInvoiceSynchronizer">
                <argument type="service" id="ekyna_commerce.shipment.invoice_synchronizer"/>
            </call>
        </service>

        <!-- Shipment item abstract listener -->
        <service id="ekyna_commerce.shipment_item.abstract_listener"
                 class="Ekyna\Component\Commerce\Shipment\EventListener\AbstractShipmentItemListener"
                 abstract="true">
            <call method="setPersistenceHelper">
                <argument type="service" id="ekyna_resource.doctrine.orm.persistence_helper"/>
            </call>
            <call method="setStockUnitAssigner">
                <argument type="service" id="ekyna_commerce.stock_unit.assigner"/>
            </call>
        </service>

        <!-- Shipment method event listener -->
        <service id="ekyna_commerce.shipment_method.event_subscriber"
                 class="Ekyna\Component\Commerce\Bridge\Symfony\EventListener\ShipmentMethodEventSubscriber">
            <argument type="service" id="ekyna_resource.doctrine.orm.persistence_helper"/>
            <tag name="resource.event_subscriber"/>
        </service>

        <!-- Shipment builder -->
        <service id="ekyna_commerce.shipment.builder"
                 class="Ekyna\Component\Commerce\Shipment\Builder\ShipmentBuilder">
            <argument type="service" id="ekyna_commerce.sale_factory"/>
            <argument type="service" id="ekyna_commerce.shipment.gateway_registry"/>
            <argument type="service" id="ekyna_commerce.shipment.calculator"/>
        </service>

        <!-- Shipment invoice synchronizer -->
        <service id="ekyna_commerce.shipment.invoice_synchronizer"
                 class="Ekyna\Component\Commerce\Shipment\Builder\InvoiceSynchronizer">
            <argument type="service" id="ekyna_commerce.invoice.builder"/>
            <argument type="service" id="ekyna_commerce.document.calculator"/>
            <argument type="service" id="ekyna_resource.doctrine.orm.persistence_helper"/>
        </service>

        <!-- Shipment price renderer -->
        <service id="ekyna_commerce.shipment_price.list_builder"
                 class="Ekyna\Bundle\CommerceBundle\Service\Shipment\PriceListBuilder">
            <argument type="service" id="ekyna_commerce.shipment_zone.repository"/>
            <argument type="service" id="ekyna_commerce.shipment_method.repository"/>
            <argument type="service" id="ekyna_commerce.shipment_price.repository"/>
        </service>

        <!-- Shipment price resolver -->
        <service id="ekyna_commerce.shipment_price.resolver"
                 class="Ekyna\Component\Commerce\Shipment\Resolver\ShipmentPriceResolver">
            <argument type="service" id="ekyna_commerce.shipment_price.repository"/>
            <argument type="service" id="ekyna_commerce.shipment_rule.repository"/>
            <argument type="service" id="ekyna_commerce.pricing.tax_resolver"/>
            <argument type="service" id="ekyna_commerce.common.context_provider"/>
        </service>

        <!-- Shipment address resolver -->
        <service id="ekyna_commerce.shipment_address.resolver"
                 class="Ekyna\Bundle\CommerceBundle\Service\Shipment\ShipmentAddressResolver">
            <argument type="service" id="ekyna_commerce.shipment_address.transformer"/>
            <argument type="service" id="ekyna_setting.manager"/>
            <argument type="service" id="ekyna_commerce.country.repository"/>
        </service>

        <!-- Shipment subject state resolver -->
        <service id="ekyna_commerce.shipment.subject_state_resolver"
                 class="Ekyna\Component\Commerce\Shipment\Resolver\ShipmentSubjectStateResolver">
            <argument type="service" id="ekyna_commerce.shipment.calculator"/>
        </service>

        <!-- Shipment persister (for gateways) -->
        <service id="ekyna_commerce.shipment.persister"
                 class="Ekyna\Bundle\CommerceBundle\Service\Shipment\ShipmentPersister">
            <argument type="service" id="ekyna_commerce.order_shipment.manager"/>
        </service>

        <!-- Shipment gateway registry -->
        <service id="ekyna_commerce.shipment.gateway_registry"
                 class="Ekyna\Component\Commerce\Shipment\Gateway\Registry"
                 lazy="true">
            <call method="setAddressResolver">
                <argument type="service" id="ekyna_commerce.shipment_address.resolver"/>
            </call>
            <call method="setWeightCalculator">
                <argument type="service" id="ekyna_commerce.shipment.weight_calculator"/>
            </call>
            <call method="setPersister">
                <argument type="service" id="ekyna_commerce.shipment.persister"/>
            </call>
        </service>

        <!-- Shipment method gateway provider -->
        <service id="ekyna_commerce.shipment.method_gateway_provider"
                 class="Ekyna\Component\Commerce\Bridge\Doctrine\ORM\Provider\ShipmentGatewayProvider"
                 public="false">
            <argument type="service" id="ekyna_commerce.shipment_method.repository"/>
            <tag name="ekyna_commerce.shipment.gateway_provider"/>
        </service>

        <!-- Shipment Noop Platform -->
        <service id="ekyna_commerce.shipment.noop_platform"
                 class="Ekyna\Component\Commerce\Shipment\Gateway\Noop\NoopPlatform"
                 public="false">
            <tag name="ekyna_commerce.shipment.gateway_platform"/>
        </service>

        <!-- Shipment InStore Platform -->
        <service id="ekyna_commerce.shipment.in_store_platform"
                 class="Ekyna\Component\Commerce\Shipment\Gateway\InStore\InStorePlatform"
                 public="false">
            <tag name="ekyna_commerce.shipment.gateway_platform"/>
        </service>

        <!-- API Shipment gateway controller -->
        <service id="ekyna_commerce.controller.api.shipment_gateway"
                 class="Ekyna\Bundle\CommerceBundle\Controller\Api\ShipmentGatewayController">
            <argument type="service" id="ekyna_commerce.shipment.gateway_registry"/>
        </service>

    </services>

</container>
